version: '3'

services:

    gitea:
        image: gitea/gitea:latest
        container_name: gitea
        restart: always
        ports:
            - "2222:22"
        expose:
            - 3000
        environment:
            - APP_NAME=Gitea
            - RUN_MODE=prod
            - ROOT_URL=https://${GITEA_ROOT_URL}/
            - DB_TYPE=postgres
            - DB_HOST=postgres-db:5432
            - DB_NAME=gitea
            - DB_USER=gitea-usr
            - DB_PASSWD=${GITEA_DB_PASSWD}
            - VIRTUAL_HOST=${GITEA_ROOT_URL}
            - VIRTUAL_PORT=3000
            #- LETSENCRYPT_HOST=${GITEA_ROOT_URL}
            #- LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
        networks:
            - appnet
            - proxy
        volumes:
            - gitea:/data
        depends_on:
            - postgres-db

    postgres-db:
        image: postgres:alpine
        container_name: postgres-db
        restart: always
        environment:
            - POSTGRES_USER=gitea-usr
            - POSTGRES_PASSWORD=${GITEA_DB_PASSWD}
            - POSTGRES_DB=gitea
        networks:
            - appnet
        volumes:
            - postgres-db:/var/lib/postgresql/data

    drone:
        image: drone/drone
        container_name: drone
        restart: always
        expose:
            - 80
        environment:
            - DRONE_AGENTS_ENABLED=true
            - DRONE_GITEA_SERVER=https://${GITEA_ROOT_URL}/
            - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
            - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
            - DRONE_GIT_ALWAYS_AUTH=true
            - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
            - DRONE_SERVER_HOST=${DRONE_SRV_URL}
            - DRONE_SERVER_PROTO=https
            - VIRTUAL_HOST=${DRONE_SRV_URL}
            - VIRTUAL_PORT=80
            #- LETSENCRYPT_HOST=${DRONE_SRV_URL}
            #- LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
        networks:
            - appnet
            - proxy
        volumes:
            - drone:/data
        depends_on:
            - gitea


    drone-runner:
        image: drone/drone-runner-docker
        container_name: drone-runner
        restart: always
        environment:
            - DRONE_RPC_HOST=${DRONE_SRV_URL}
            - DRONE_RPC_PROTO=https
            - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
            - DRONE_RUNNER_CAPACITY=2
            - DRONE_RUNNER_NETWORKS=appnet
        networks:
            - appnet
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - drone

volumes:
  gitea: {}
  postgres-db: {}
  drone: {}

networks:
    appnet:
    proxy:
        external:
            name: nginx-proxy